plugins {
    id 'application'
    id 'io.deephaven.project.register'
}

dependencies {
    implementation project(':server-jetty')
    implementation project(':extensions-parquet-table')

    Classpaths.inheritImmutables(project)

    runtimeOnly project(':log-to-slf4j')
    runtimeOnly project(':logback-print-stream-globals')
    runtimeOnly project(':logback-logbuffer')
    Classpaths.inheritLogbackClassic(project)
}

distributions {
    main {
        distributionBaseName = 'server-benchmark-application'
    }
}

def extraJvmArgs = [
        '-server',
        '-XshowSettings:vm',
]

if (hasProperty('groovy')) {
    extraJvmArgs += ['-Ddeephaven.console.type=groovy']
}

if (!hasProperty('excludeHotspotImpl')) {
    dependencies {
        runtimeOnly project(':hotspot-impl')
    }
    extraJvmArgs += ['--add-exports', 'java.management/sun.management=ALL-UNNAMED']
}

if (!hasProperty('excludeClockImpl')) {
    dependencies {
        runtimeOnly project(':clock-impl')
    }
    extraJvmArgs += ['--add-exports', 'java.base/jdk.internal.misc=ALL-UNNAMED']
}

tasks.withType(JavaExec).configureEach {
    // This appends to the existing jvm args, so that java-open-nio still takes effect
    jvmArgs extraJvmArgs
}

tasks.withType(CreateStartScripts).configureEach {
    defaultJvmOpts += extraJvmArgs
}

applicationName = 'start'
mainClassName = 'io.deephaven.benchmark.BenchmarkMain'

apply plugin: 'io.deephaven.java-open-nio'
